/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ps_Inventario;

import java.awt.Color;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JPanel;

/**
 *
 * @author Antonio
 */
public class Lendings extends javax.swing.JPanel {

    Connect conn;
    Connection reg;
    /**
     * Creates new form Principal
     */
    public Lendings() {
        initComponents();
        conn = new Connect();
        reg = conn.getConnection();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        body = new javax.swing.JPanel();
        Title = new javax.swing.JLabel();
        Text1 = new javax.swing.JLabel();
        Text2 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        articulo_id = new javax.swing.JTextField();
        dni = new javax.swing.JTextField();
        button = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        Image = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setMinimumSize(new java.awt.Dimension(750, 430));
        setPreferredSize(new java.awt.Dimension(750, 430));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        body.setBackground(new java.awt.Color(255, 255, 255));
        body.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        add(body, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        Title.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        Title.setText("Nuevo Préstamo");
        add(Title, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, -1, -1));

        Text1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        Text1.setText("Articulo ID");
        add(Text1, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 150, -1, -1));

        Text2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        Text2.setText("Dni Usuario");
        add(Text2, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 50, -1, -1));

        jSeparator1.setForeground(new java.awt.Color(0, 153, 255));
        jSeparator1.setPreferredSize(new java.awt.Dimension(200, 10));
        add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 210, 260, 10));

        jSeparator2.setForeground(new java.awt.Color(0, 153, 255));
        jSeparator2.setPreferredSize(new java.awt.Dimension(200, 10));
        add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 110, 260, 10));

        jSeparator3.setForeground(new java.awt.Color(204, 204, 204));
        jSeparator3.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jSeparator3.setPreferredSize(new java.awt.Dimension(200, 10));
        add(jSeparator3, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 20, 10, 350));

        articulo_id.setForeground(new java.awt.Color(102, 102, 102));
        articulo_id.setText("Ingrese el ID del Elemento a retirar");
        articulo_id.setBorder(null);
        articulo_id.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                articulo_idMousePressed(evt);
            }
        });
        articulo_id.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                articulo_idActionPerformed(evt);
            }
        });
        add(articulo_id, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 180, 260, 30));

        dni.setForeground(new java.awt.Color(102, 102, 102));
        dni.setText("Ingrese el Dni del usuario");
        dni.setBorder(null);
        dni.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                dniMousePressed(evt);
            }
        });
        dni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dniActionPerformed(evt);
            }
        });
        add(dni, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 80, 260, 30));

        button.setBackground(new java.awt.Color(18, 90, 173));
        button.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        button.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                buttonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                buttonMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                buttonMousePressed(evt);
            }
        });
        button.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Prestar");
        button.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 10, -1, -1));

        add(button, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 270, 260, 50));

        Image.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Image.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ps_Inventario/images/prestamo.gif"))); // NOI18N
        Image.setMaximumSize(new java.awt.Dimension(750, 430));
        Image.setMinimumSize(new java.awt.Dimension(750, 430));
        add(Image, new org.netbeans.lib.awtextra.AbsoluteConstraints(-180, -140, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void articulo_idActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_articulo_idActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_articulo_idActionPerformed

    private void dniMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dniMousePressed
       if(dni.getText().equals("Ingrese el Dni del usuario"))
        dni.setText("");
       if(articulo_id.getText().equals("") || articulo_id.getText() == null || articulo_id.getText().equals(" "))
        articulo_id.setText("Ingrese el ID del Elemento a prestar");
    }//GEN-LAST:event_dniMousePressed

    private void articulo_idMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_articulo_idMousePressed
        if(articulo_id.getText().equals("Ingrese el ID del Elemento a retirar"))
            articulo_id.setText("");
        if(dni.getText().equals("") || dni.getText() == null || dni.getText().equals(" "))
            dni.setText("Ingrese el Dni del usuario");
    }//GEN-LAST:event_articulo_idMousePressed

    private void buttonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonMouseEntered
        setColor(button);
    }//GEN-LAST:event_buttonMouseEntered

    private void buttonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonMouseExited
        resetColor(button);
    }//GEN-LAST:event_buttonMouseExited
    // PRESTAR
    private void buttonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonMousePressed
        String dn = dni.getText();
        String artic = articulo_id.getText();
        int intdn = 0;
        
        // Conditions
        if(dn.equals("") || artic.equals("")){
            javax.swing.JOptionPane.showMessageDialog(this, "Debe llenar todos los campos \n", "AVISO", javax.swing.JOptionPane.INFORMATION_MESSAGE);
            dni.requestFocus();
        }
        else{
            try
            {
                intdn = Integer.parseInt(dni.getText());
                
                if(intdn <= 0){
                    javax.swing.JOptionPane.showMessageDialog(this, "El dni del usuario debe ser mayor a 0. \n", "AVISO", javax.swing.JOptionPane.INFORMATION_MESSAGE);
                     dni.requestFocus();
                }
            }catch(Exception ex){
                javax.swing.JOptionPane.showMessageDialog(this, "El dni del usuario debe ser un número entero. \n", "AVISO", javax.swing.JOptionPane.INFORMATION_MESSAGE);
                 dni.requestFocus();
            }            
        }
        
        try {
            // Verificamos el usuario
            boolean pase = UserExist(intdn);
            if(!pase){
                javax.swing.JOptionPane.showMessageDialog(this, "No existe ningún usuario con ese dni. \n", "AVISO", javax.swing.JOptionPane.INFORMATION_MESSAGE);
                 dni.requestFocus();
            }
            // Verificamos el libro
            else if(!Articulo(artic)){
                javax.swing.JOptionPane.showMessageDialog(this, "No existe ningún libro con esa ID. \n", "AVISO", javax.swing.JOptionPane.INFORMATION_MESSAGE);
                 articulo_id.requestFocus();
            }
            else if(CheckLending(intdn, artic)){
                javax.swing.JOptionPane.showMessageDialog(this, "Esa persona ya cuenta con el préstamo de ese mismo Libro. \n", "AVISO", javax.swing.JOptionPane.INFORMATION_MESSAGE);
                 articulo_id.requestFocus();
            }
            else if(!BookAvailable(artic)){
                javax.swing.JOptionPane.showMessageDialog(this, "Ya no hay más libros con esa ID para prestar. \n", "AVISO", javax.swing.JOptionPane.INFORMATION_MESSAGE);
                 articulo_id.requestFocus();
            }
            else{
                InsertLending(intdn, artic);// Insertamos el prestamo a la DB.
                dni.setText("");
                articulo_id.setText("");
            }
              
        } catch (SQLException ex) {
            Logger.getLogger(Lendings.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_buttonMousePressed

    private void dniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dniActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dniActionPerformed

    void setColor(JPanel panel){
        panel.setBackground(new Color(21,101,192));
    }
    void resetColor(JPanel panel){
        panel.setBackground(new Color(18,90,173));
    }
    
    public boolean UserExist(int dni) throws SQLException{
        boolean res = false;
        Statement stm = reg.createStatement();
        ResultSet re = stm.executeQuery("SELECT `id` FROM `users` WHERE `dni` = '"+dni+"'");
        if(re.next())
            res = true;
        
        return res;
    }
    
    public boolean Articulo(String articuloid) throws SQLException{
        boolean res = false;
        Statement stm = reg.createStatement();
        ResultSet re = stm.executeQuery("SELECT `id` FROM `articulos` WHERE `id` = '"+articuloid+"'");
        if(re.next())
            res = true;
        
        return res;
    }
    
    public boolean BookAvailable(String articuloid) throws SQLException{
        boolean res = false;
        Statement stm = reg.createStatement();
        ResultSet re = stm.executeQuery("SELECT `available` FROM `articulos` WHERE `id` = '"+articuloid+"'");
        if(re.next()){
            int av = Integer.parseInt(re.getString("available"));
            if(av >= 1)
                res = true;
        }
        
        return res;
    }
    
    public boolean CheckSanction(int userid, String articuloid) throws SQLException, ParseException{
        boolean res = false;
        Statement stm = reg.createStatement();
        ResultSet re = stm.executeQuery("SELECT * FROM `lendings` WHERE `id` = '"+articuloid+"' AND `user_id` = '"+userid+"'");
        System.out.println("1");
        if(re.next()){
            System.out.println("2");
            Date ahora = new Date();
            Date returned = deStringToDate(re.getString("date_return"));
            System.out.println("2");
            int days = diferenciasDeFechas(returned, ahora);
            System.out.println("3");
            System.out.println(days);
            int days2 = diferenciasDeFechas(ahora, returned);
            System.out.println(days2);
            if(days <= 0)
                res = true;
            System.out.println("4");
        }
        System.out.println("5");
        return res;
    }
    
    public boolean CheckLending(int userid, String articuloid) throws SQLException{
        boolean res = false;
        Statement stm = reg.createStatement();
        ResultSet re = stm.executeQuery("SELECT * FROM `lendings` WHERE `user_id` = '"+userid+"' AND `articulo_id` = '"+ articuloid +"'");
        if(re.next()){
            res = true;
        }
        
        return res;
    }
    
    public void InsertLending(int id, String articuloid) throws SQLException{
        Statement stm = reg.createStatement();
        String date = getFechaActual();
        Date ahora = new Date();
        Date devol = sumarFechasDias(ahora, 5);//Sumamos 5 días a la fecha actual.
        SimpleDateFormat formateador = new SimpleDateFormat("dd-MM-yyyy");
        String dev = formateador.format(devol);
        stm.executeUpdate("INSERT INTO `lendings` (`id`, `user_id`, `articulo_id`, `date_out`, `date_return`) VALUES (NULL, '"+id+"', '"+ articuloid +"', '"+ date +"', '"+dev+"')");
        stm.executeUpdate("UPDATE `articulos` SET `available` = available-1 WHERE `id` = '"+ articuloid +"';");
        javax.swing.JOptionPane.showMessageDialog(this, "¡Prestamo realizado correctamente! \n", "HECHO", javax.swing.JOptionPane.INFORMATION_MESSAGE);
        
    }
    
    public void Devolutions(int dn, String articuloid) throws SQLException, ParseException{
        Statement stm = reg.createStatement();
        int days = -1;
        boolean ready = false;
        do{
            ResultSet re = stm.executeQuery("SELECT * FROM `lendings` WHERE `articulo_id` = '"+articuloid+"' AND `user_id` = '"+dn+"'");
            if(re.next()){
                Date ahora = new Date();
                Date returned = deStringToDate(re.getString("date_return"));
                days = diferenciasDeFechas(ahora, returned);                
            }
            ready = true;
        }while(!ready);
        if(ready){
            stm.executeUpdate("DELETE FROM `lendings` WHERE `articulo_id` = '"+ articuloid +"' AND `user_id` = '"+ dn +"'");
            stm.executeUpdate("UPDATE `articulos` SET `available` = available+1 WHERE `id` = '"+ articuloid +"';");
            if(days <= 0){
                int money = 0;
                money = days * -1;
                int cost = 5;// Costo por día retardado.
                money = money * cost;
                stm.executeUpdate("UPDATE `users` SET `sanctions` = sanctions+1, `sanc_money` = sanc_money+'"+ money +"' WHERE `id` = '"+ dn +"';");
                javax.swing.JOptionPane.showMessageDialog(this, "¡SANCIONADO POR ENTREGA A DESTIEMPO! ($"+money+") \n", "AVISO", javax.swing.JOptionPane.INFORMATION_MESSAGE);
            }
            javax.swing.JOptionPane.showMessageDialog(this, "¡Devolución realizada correctamente! \n", "HECHO", javax.swing.JOptionPane.INFORMATION_MESSAGE);

        }
    }
    
    public static String getFechaActual() {
        Date ahora = new Date();
        SimpleDateFormat formateador = new SimpleDateFormat("dd-MM-yyyy");
        return formateador.format(ahora);
    }
    
    public static java.sql.Date sumarFechasDias(java.util.Date fch, int dias) {
        Calendar cal = new GregorianCalendar();
        cal.setTimeInMillis(fch.getTime());
        cal.add(Calendar.DATE, dias);
        return new java.sql.Date(cal.getTimeInMillis());
    }
    
    //Diferencias entre dos fechas
    //@param fechaInicial La fecha de inicio
    //@param fechaFinal  La fecha de fin
    //@return Retorna el numero de dias entre dos fechas
    public static synchronized int diferenciasDeFechas(Date fechaInicial, Date fechaFinal) throws ParseException {

        DateFormat df = DateFormat.getDateInstance(DateFormat.MEDIUM);
        String fechaInicioString = df.format(fechaInicial);
        try {
            fechaInicial = df.parse(fechaInicioString);
        } catch (ParseException ex) {
        }

        String fechaFinalString = df.format(fechaFinal);
        fechaFinal = df.parse(fechaFinalString);

        long fechaInicialMs = fechaInicial.getTime();
        long fechaFinalMs = fechaFinal.getTime();
        long diferencia = fechaFinalMs - fechaInicialMs;
        double dias = Math.floor(diferencia / (1000 * 60 * 60 * 24));
        return ((int) dias);
    }

    //Devuele un java.util.Date desde un String en formato dd-MM-yyyy
    //@param La fecha a convertir a formato date
    //@return Retorna la fecha en formato Date
    public static synchronized java.util.Date deStringToDate(String fecha) {
        SimpleDateFormat formatoDelTexto = new SimpleDateFormat("dd-MM-yyyy");
        Date fechaEnviar = null;
        try {
            fechaEnviar = formatoDelTexto.parse(fecha);
            return fechaEnviar;
        } catch (ParseException ex) {
            ex.printStackTrace();
            return null;
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Image;
    private javax.swing.JLabel Text1;
    private javax.swing.JLabel Text2;
    private javax.swing.JLabel Title;
    private javax.swing.JTextField articulo_id;
    private javax.swing.JPanel body;
    private javax.swing.JPanel button;
    private javax.swing.JTextField dni;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    // End of variables declaration//GEN-END:variables
}
